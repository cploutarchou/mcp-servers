version: '3.8'
services:
  mcp-python:
      build: 
        context: ./python
        dockerfile: Dockerfile
      ports:
        - "8080:8080"
        - "8081:8081"  # Metrics port
      environment:
        - ALLOWED_DIR=/data
        - LOG_LEVEL=info
        - MCP_SERVER_NAME=Python FastAPI MCP
        - MCP_SERVER_VERSION=1.0.0
        - DEBUG=false
        - METRICS_PORT=8081
      volumes:
        - ./python/data:/data
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
        interval: 30s
        timeout: 10s
        retries: 3
      restart: unless-stopped

  mcp-go:
    image: ghcr.io/centralmind/gateway:v0.2.14
    ports:
      - "9090:9090"
      - "9091:9091"  # Metrics port
    environment:
      - LOG_LEVEL=info
      - DEBUG=false
      - MCP_SERVER_NAME=Go MCP Server
      - MCP_SERVER_VERSION=1.0.0
    command: start --connection-string "postgres://demo:demo@db:5432/demo?sslmode=disable"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    depends_on:
      - db

  mcp-rust:
      build: 
        context: ./rust
        dockerfile: Dockerfile
      command: ["tfmcp", "mcp", "--http"]
      ports:
        - "8082:8080"
        - "8083:8081"  # Metrics port
      volumes:
        - ./rust/config:/etc/tfmcp
        - ./rust/data:/data
      environment:
        - LOG_LEVEL=info
        - DEBUG=false
        - MCP_SERVER_NAME=Rust Terraform MCP Server
        - MCP_SERVER_VERSION=1.0.0
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
        interval: 30s
        timeout: 10s
        retries: 3
      restart: unless-stopped
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: demo
      POSTGRES_DB: demo
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

volumes:
  db_data: